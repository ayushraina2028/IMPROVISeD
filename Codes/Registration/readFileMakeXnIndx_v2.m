

function [x_n_indx] = readFileMakeXnIndx(pts_xyz_files, pts_indx_files, cross_xyz_files, cross_indx_files)
%%
%   I/P     pts_xyz_files: comma separated filenames for xyz coordinats of the points
%          pts_indx_files: comma separated filenames for indices of the points
%         cross_xyz_files: comma separated filenames for xyz coordinats of
%                          the crosslinks
%         cross_xyz_files: comma separated filenames for indices coordinats of
%                          the crosslinks
%   
%   O/P    x_n_indx: to call registration module
%   
%%
    pts_xyz  = split(pts_xyz_files, ',');
    pts_indx = split(pts_indx_files, ',');
    
    crs_xyz  = split(cross_xyz_files, ',');
    crs_indx = split(cross_indx_files, ',');
    
    if numel(pts_xyz) ~= numel(pts_indx)
       error('No. of elements in 1st and 2nd argument not same') 
    end
    
    %if numel(crs_xyz) ~= numel(crs_indx)
    %   error('No. of elements in 1st and 2nd argument not same') 
    %end
    
%%

    % for pdbs
    for i = 1:numel(pts_xyz)
       x_n_indx(i).x   = readXYZ(string(pts_xyz(i)))';
       x_n_indx(i).ind = readIndex(string(pts_indx(i)))';
    end
    
    % for crosspoints
    count = numel(pts_xyz)+1;
    %x_n_indx(count+1).x   = readXYZ(crs_xyz)';
    %x_n_indx(count+1).ind = readIndex(crs_indx)';
    
    for i = 1:numel(crs_xyz)
       x_n_indx(count).x   = readXYZ(string(crs_xyz(i)))';
       x_n_indx(count).ind = readIndex(string(crs_indx(i)))';      
       count = count +1;
    end
    

end


function xyz = readXYZ(filename, dataLines)
%IMPORTFILE1 Import data from a text file
%  ADRECPLIG1AXYZ = IMPORTFILE1(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  ADRECPLIG1AXYZ = IMPORTFILE1(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  ADrecplig1Axyz = importfile1("/data2/nmr/complex_modelling/igem_prot/bamdev_and_procrustes/AD_recp_lig_1_A_xyz.txt", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 04-Sep-2024 14:44:37

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end


%% Setup the Import Options
    opts = delimitedTextImportOptions("NumVariables", 3);

% Specify range and delimiter
    opts.DataLines = dataLines;
    opts.Delimiter = " ";

% Specify column names and types
    opts.VariableNames = ["x", "y", "z"];
    opts.VariableTypes = ["double", "double", "double"];
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";
    opts.ConsecutiveDelimitersRule = "join";
    opts.LeadingDelimitersRule = "ignore";

% Import the data
    xyz = table2array(readtable(filename, opts));

end

function indx = readIndex(filename, dataLines)
%IMPORTFILE1 Import data from a text file
%  RECPLIG1AINDX = IMPORTFILE1(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  RECPLIG1AINDX = IMPORTFILE1(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  recplig1Aindx = importfile1("/data2/nmr/complex_modelling/igem_prot/bamdev_and_procrustes/recp_lig_1_A_indx.txt", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 04-Sep-2024 12:36:41

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end

%% Setup the Import Options
    opts = delimitedTextImportOptions("NumVariables", 1);

% Specify range and delimiter
    opts.DataLines = dataLines;
    opts.Delimiter = ",";

% Specify column names and types
    opts.VariableNames = "indx";
    opts.VariableTypes = "double";
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";

% Import the data
    indx = table2array(readtable(filename, opts));

end

